// construct-plymouth script file

// status code : 0 for none, 1 for starting, 2 for waiting, 3 for trying, 4 for terminating

// initialise window and background

window.width = Window.GetWidth();
window.height = Window.GetHeight();
origin.x = Window.GetX();
origin.y = Window.GetY();

Window.SetBackgroundTopColor(0, 0.0745, 0.0745);
Window.SetBackgroundBottomColor(0, 0.0745, 0.0745);

background.image = Image("background.png");
background.sprite = Sprite(background.image);
background.x = origin.x + ((window.width - background.image.GetWidth()) / 2);
background.y = origin.y + ((window.height - background.image.GetHeight()) / 2);
background.sprite.SetPosition(background.x, background.y, 0);

// 

dot.status = 1;
dot.anim_index = 0;
passwordbox.status = 0;

// DEBUG PARAMS

debug_time = 0;
debug_progress = 0;
debug_text = "none";
debug_frames = 0;
status_display = Sprite();
status_display.SetPosition(background.x + 50, background.y + 100, 10);

fun update_boot_progress(boot_time, boot_progress)
{
    debug_time = boot_time;
    debug_progress = boot_progress;
}
Plymouth.SetBootProgressFunction(update_boot_progress);

fun update_debug_text(status_text)
{
    debug_text = status_text;
    dot.status = 4;
    passwordbox.status = 4;
}

// called when crypt password is entered correctly and plymouth proceeds to boot
Plymouth.SetUpdateStatusFunction(update_debug_text);

fun animation()
{
    // DEBUG INFO
    global.debug_frames++;
    global.debug_image = Image.Text(global.debug_text + " | " + global.debug_progress + " | " + global.debug_time + " | " + global.debug_frames, 1, 1, 1);
    global.debug.sprite = Sprite(global.debug_image);
    global.debug.sprite.SetPosition(background.x + 50, background.y + 50, 10);
    status_display_image = Image.Text(dot.status + " | " + passwordbox.status, 1, 1, 1);   
    status_display.SetImage(status_display_image);

    // PASSWORDBOX ANIMATION

    if (passwordbox.status == 1)
    {
        frame = Image("passwordbox_starting" + passwordbox.anim_index + ".png");
        passwordbox.sprite.SetImage(frame);
        passwordbox.anim_index++;
        if (passwordbox.anim_index > 49)
        {
            passwordbox.status = 2;
            passwordbox.anim_index = 0;
        }
    }
    else if (passwordbox.status == 4)
    {
        frame = Image("passwordbox_terminating" + passwordbox.anim_index + ".png");
        passwordbox.sprite.SetImage(frame);
        passwordbox.anim_index++;
        if (passwordbox.anim_index > 49)
        {
            passwordbox.status = 0;
        }
    }

}

Plymouth.SetRefreshFunction(animation);

fun display_password_box(prompt, bullets)
{
    if (dot.status != 1)
    {
        dot.status = 2;
    }
    if (passwordbox.status == 0)
    {
        passwordbox.x = 245 + background.x;
        passwordbox.y = 424 + background.y;
        passwordbox.z = 1;
        passwordbox.sprite = Sprite();
        passwordbox.sprite.SetPosition(passwordbox.x, passwordbox.y, passwordbox.z);
        passwordbox.anim_index = 0;
        passwordbox.bullet_image = Image("bullet.png");
        passwordbox.status = 1;
    }
    for (i = 0; ( i < bullets || passwordbox.bullet[i]) && i < 38; i++)
    {
        if (!passwordbox.bullet[i])
        {
            passwordbox.bullet[i].sprite = Sprite(passwordbox.bullet_image);
            passwordbox.bullet[i].x = passwordbox.x + 136 + (12 * i);
            passwordbox.bullet[i].y = passwordbox.y + 109;
            passwordbox.bullet[i].z = passwordbox.z + 1;
            passwordbox.bullet[i].sprite.SetPosition(passwordbox.bullet[i].x, passwordbox.bullet[i].y, passwordbox.bullet[i].z);
        }
        if (i < bullets)
            passwordbox.bullet[i].sprite.SetOpacity(1);
        else
            passwordbox.bullet[i].sprite.SetOpacity(0);
    }
}

Plymouth.SetDisplayPasswordFunction(display_password_box);

fun reset_password_box()
{
    if (dot.status != 1) 
    {
        dot.status = 3;
    }
}
// called the moment ENTER is pressed
Plymouth.SetDisplayNormalFunction(reset_password_box);